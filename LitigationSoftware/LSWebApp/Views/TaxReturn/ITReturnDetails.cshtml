@model  LSWebApp.Models.ITReturnDetailsHeaderModel
@{
    ViewBag.Title = "Input Sheet";
    Layout = "~/Views/Shared/_LayoutDynemicMenu.cshtml";
}
<style type="text/css">
    .table-condensed {
        width: 200px;
        height: 10px;
        font-size: 10px;
    }
</style>

<h3>
    @Html.LabelFor(m => m.CompanyObject.CompanyName
                               , Model.CompanyObject.CompanyName) 
    @Html.HiddenFor(m => m.CompanyObject.Id
, Model.CompanyObject.Id)
</h3>

<div class="container">
    <div class="bs-component">
        <table class="table table-hover">
            <thead>
                <tr>
                    @Html.Hidden("hdNewSpIncomeRecordCount", "0")
                    @Html.Hidden("hdNewRefundDetailsRecordCount", "0")
                    <th>Financial Year</th>
                    <th>
                        <select id="FYAYId"
                                name="@Html.NameFor(m=>m.FYAYId)">
                            @foreach (var item in Model.FYAYList)
                            {
                                <option value="@item.Id.ToString()"
                                        data-year="@item.AssessmentYear">
                                    @item.FinancialYear
                                </option>
                            }
                        </select>
                    </th>

                    <th>Assesment Year</th>
                    <th class="tdAssessmentYear"></th>

                    <th>Section Category</th>
                    <th>
                        @Html.DropDownListFor(m => m.ITSectionCategoryId
                                , new SelectList(Model.ITSectionCategories
                                , "Id", "Description", Model.ITSectionCategoryId)
                                , new { @class = "ddITSectionCategory" })
                    </th>

                    <th>IT Section</th>
                    <th>
                        @Html.Partial("_LitigationDD", Model.ITSectionListSource)                        
                    </th>
                    <th>
                        <button type="button" class="btn btn-primary btn-sm btn-search"
                                id="btnsrch">
                            Search
                        </button>
                        <a href="#myModal_0" role="button" class="btn" data-toggle="modal">
                            <img src="~/images/upload.png"
                                 class="imgITHeadDocumentsUploader"
                                 title="click to upload the documents"
                                 style="width:20px;height:20px;" />
                        </a>
                    </th>
                </tr>
            </thead>
        </table>
        <br />
    </div>
</div>

<div class="container">
    <div class="bs-component" id="sectionDiv">

    </div>
</div>
@section scripts
{
    <script type="text/javascript">
        var sptemplates =
        {
            trSpIncomeRow: function () {/*
               <tr class="trSpIncomeDetails">
                    <td>
                        <input id="SPIncomeDescription_{0}" name="SPIncomeDescription_{0}" style="width:300px;" type="text">
                    </td>
                    <td>
                        <input class="numericOnly" id="SPIncomeValue_{0}" name="SPIncomeValue_{0}" type="text">
                    </td>
                    <td>
                        <input class="numericOnly" id="TaxRate_{0}" name="TaxRate_{0}" type="text">
                    </td>
                    <td>
                        <div class="input-group date form_datetime HLV_clacInput" data-date="" data-date-format="dd M yyyy" data-link-field="SPIncomeDate_{0}" data-link-format="dd M yyyy">
                            <input class="form-control" id="SPIncomeDate_{0}" name="SPIncomeDate_{0}" size="16" type="text" >
                            <span class="input-group-addon">
                                &nbsp;&nbsp;<i class="fa fa-calendar fa-2x" aria-hidden="true">
                                </i>
                            </span>
                        </div>
                    </td>
                </tr>
	        */}.toString().slice(14, -3)
        }

        $(document).ready(function () {            
            $("#FYAYId").change(function () {
                loadAssessmentYear();
            });                  
            $("#FYAYId").val('@(Model.FYAYId.HasValue ? Model.FYAYId.Value.ToString() :"1")');
            loadAssessmentYear();
            loadITReturnDetailsData();
        });

        function loadAssessmentYear() {
            $(".tdAssessmentYear").html($("#FYAYId").find(':selected').data('year'));
            $("#sectionDiv").html('');
        }

        function deleteITReturnDetailsDocument(itReturnDocumentId, filePath) {
            $.ajax({
                url: '/deletetITReturnDocument?Id=' + itReturnDocumentId + '&FilePath=' + filePath,
                error: function () {
                },
                dataType: 'json',
                success: function (data) {
                    window.location.reload();
                },
                type: 'POST'
            });
            return false;
        }

        $(".ddLitigationDD").change(function () {
            $("#sectionDiv").html('');
        });

        $(".ddITSectionCategory").change(function () {
            $("#sectionDiv").html('');
            $.ajax({
                url: '/getITSections?categoryId=' + $(this).find("option:selected").val(),
                error: function () {
                },
                dataType: 'json',
                success: function (data) {
                    $('.ddLitigationDD').html('');
                    $(data).each(function () {
                        var option = $('<option />');
                        option.attr('value', this.Id).html(this.Description);
                        $('.ddLitigationDD').append(option);
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown)
                {
                },
                type: 'GET'
            });
        });

        function loadITReturnDetailsData() {
            $.ajax({
                url: '/TaxReturn/ITReturnDetailsData?fyayId=' + $('#FYAYId').val()
                + '&itSectionId=' + $('#ITReturnDetailsObject_ITSectionID').val()
                + '&itSectionCategoryId=' + $('#ITSectionCategoryId').val(),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                type: 'GET',
                error: function (xhr, status, error) {
                    alert("inside error " + xhr.responseText);
                },
                dataType: 'html',
                success: function (data) {
                    $("#sectionDiv").html(data);

                    $('input[type=radio]').change(function (e) {
                        if ($(this).val() == "True") {
                            //alert('selected yes');
                            this.form.submit();
                        }
                        else {
                            //alert('selected no');
                        }
                    });

                    $('.form_datetime').datetimepicker({
                        weekStart: 1,
                        todayBtn: 1,
                        autoclose: 1,
                        todayHighlight: 1,
                        startView: 2,
                        minView: 2,
                        forceParse: 0
                    });

                    $(".numericOnly").keypress(function (e) {
                        return isANumber(e);
                    });

                    $(".btn-submit-doc-upload").click(function (e) {
                        var model = new FormData();
                        model.append("itHeadFile", $('#ITHeadFile')[0].files[0]);
                        model.append("documentCategoryId", $(".ddDocumentCategory").val());
                        model.append("subDocumentCategoryId", $(".ddSubDocumentCategory").val());
                        model.append("itReturnDetailsId", $("#ObjITReturnDocuments_ITReturnDetailsId").val())
                        $.ajax({ 
                            url: '/TaxReturn/InsertUpdateITReturnDocumentsDirect',
                                type: "POST",
                                data: model,
                                contentType: false,
                                processData: false,
                                success: function (result) {
                                    window.location.reload();
                                },
                                error: function () {
                                    alert("Error loading data! Please try again.");
                                }
                            });
                    });

                    $(".numericOnly").change(function (e) {
                        if ($.isNumeric($(this).val())) {
                            $(this).val(parseFloat($(this).val()).toFixed(2));
                        }
                        else {
                            $(this).val("0.00");
                        }
                    });

                    $(".ddSubheadType").change(function (e) {
                        var isAllowance = $(this).val() == "A";
                        $(this).closest('tr').find('.ddITSubHeadAllowance').each(function () {
                            $(this).css("display", isAllowance ? "inline" : "none");
                        });
                        $(this).closest('tr').find('.ddITSubHeadDisallowance').each(function () {
                            $(this).css("display", isAllowance ? "none" : "inline");
                        });
                    });

                    $(".imgSubHead").click(function (e) {
                        showHideSubHeadControls($(this));
                    });

                    $(".imgSubHeadClose").click(function (e) {
                        showHideSubHeadControls($(this));
                    });

                    $(".imgSubHeadSave").click(function (e) {
                        var txtControl = null;
                        var chkControl = null;
                        var saveButton = $(this);
                        var itHeadId = 0;
                        $(e.target).closest(".custom-sub-head").find('.chkSubHead').each(function () {
                            chkControl = $(this);
                        });
                        $(e.target).closest(".custom-sub-head").find('.txtSubHead').each(function () {
                            txtControl = $(this);
                        });
                        $(e.target).closest(".custom-sub-head").find('.hdIIHeadIdSubHead').each(function () {
                            itHeadId = $(this).val();
                        });
                        if (txtControl.val() == "") {
                            txtControl.addClass("validationError");
                            return;
                        }
                        else {
                            txtControl.removeClass("validationError");
                        }

                        var item = {};
                        item.Description = txtControl.val();
                        item.IsAllowance = chkControl.prop("checked");
                        item.Active = true;
                        item.ITHeadId = itHeadId;

                        $.ajax({
                            type: 'POST',
                            url: '/manageITSubHead/',
                            data: JSON.stringify(item),
                            success: function (data) {
                                if (item.IsAllowance) {
                                    saveButton.parents('.modal-content')
                                    .find(".ddITSubHeadAllowance")
                                    .each(function () {
                                        $(this).append($('<option></option>').val(data.Id).html(item.Description));
                                    });
                                }
                                else {
                                    saveButton.parents('.modal-content')
                                    .find(".ddITSubHeadDisallowance")
                                    .each(function () {
                                        $(this).append($('<option></option>').val(data.Id).html(item.Description));
                                    });
                                }                               
                                showHideSubHeadControls(saveButton);
                            },
                            contentType: "application/json",
                            dataType: 'json'
                        });
                    });

                    $(".imgSubDocCategory").click(function (e) {
                        showHideSubDocCategoryControls($(this));
                    });

                    $(".imgSubDocCategoryClose").click(function (e) {
                        showHideSubDocCategoryControls($(this));
                    });

                    $(".imgSubDocCategorySave").click(function (e) {
                        var txtControl = null;
                        var saveButton = $(this);
                        var documentCategoryId = 0;
                        $(e.target).closest(".custom-sub-doc-category").find('.txtSubDocCategory').each(function () {
                            txtControl = $(this);
                        });
                        $(e.target).closest(".custom-sub-doc-category").find('.ddDocumentCategory').each(function () {
                            documentCategoryId = $(this).val();
                        });
                        if (txtControl.val() == "") {
                            txtControl.addClass("validationError");
                            return;
                        }
                        else {
                            txtControl.removeClass("validationError");
                        }

                        var item = {};
                        item.Description = txtControl.val();
                        item.Active = true;
                        item.DocumentCategoryId = documentCategoryId;

                        $.ajax({
                            type: 'POST',
                            url: '/manageSubDocumentCategory/',
                            data: JSON.stringify(item),
                            success: function (data) {
                                saveButton.parents('.modal-content')
                                    .find(".ddSubDocumentCategory")
                                    .each(function () {
                                        $(this).append($('<option></option>').val(data.Id).html(item.Description));
                                    });
                                showHideSubDocCategoryControls(saveButton);
                            },
                            contentType: "application/json",
                            dataType: 'json'
                        });
                    });

                    $(".tr-custom-add").hide();
                    $(".btn-add-row-it-sub-head").click(function (event) {
                        var $tr = $(this).parents('.modal-content').find('tr.trITReturnDetailsExtension:last');
                        var $clone = $tr.clone();
                        $clone.find(':text').val('0.00');
                        $clone.find('.hdITReturnDetailsExtensionId').val("0");
                        $tr.after($clone);
                        $(".numericOnly").keypress(function (e) {
                            return isANumber(e);
                        });

                        $(".numericOnly").change(function (e) {
                            if ($.isNumeric($(this).val())) {
                                $(this).val(parseFloat($(this).val()).toFixed(2));
                            }
                            else {
                                $(this).val("0.00");
                            }
                        });

                        $(".ddSubheadType").change(function (e) {
                            var isAllowance = $(this).val() == "A";
                            $(this).closest('tr').find('.ddITSubHeadAllowance').each(function () {
                                $(this).css("display", isAllowance ? "inline" : "none");
                            });
                            $(this).closest('tr').find('.ddITSubHeadDisallowance').each(function () {
                                $(this).css("display", isAllowance ? "none" : "inline");
                            });
                        });
                    });

                    $(".btn-save-it-sub-head").click(function (event) {
                        var data = [];
                        var isValid = true;
                        $(this).parents('.modal-content')
                            .find('tr.trITReturnDetailsExtension').each(function () {
                                var itReturnDetailsExtension = {};                                
                                $('#ObjITReturnDetailsExtension_ITReturnDetailsId').each(function () {
                                    itReturnDetailsExtension.ITReturnDetailsId = parseInt($(this).val());
                                });
                                $(this).find('.hdITReturnDetailsExtensionId').each(function () {
                                    itReturnDetailsExtension.Id = $(this).val();
                                });
                                $(this).find('.txtITSubHeadValue').each(function () {
                                    if ($(this).val()) {
                                        itReturnDetailsExtension.ITSubHeadValue = $(this).val();
                                        $(this).removeClass("validationError");
                                    }
                                    else {   
                                        isValid = false;
                                        $(this).addClass("validationError");
                                    }
                                });
                                $(this).find('.ddITSubHeadAllDisall').each(function () {
                                    if ($(this).css("display") != 'none') {
                                        if ($(this).val()) {
                                            itReturnDetailsExtension.ITSubHeadId = $(this).val();
                                            $(this).removeClass("validationError");
                                        }
                                        else {
                                            isValid = false;
                                            $(this).addClass("validationError");
                                        }
                                    }
                                });
                                data.push(itReturnDetailsExtension);
                            });
                        if (isValid) {

                            $.ajax({
                                type: 'POST',
                                url: '/TaxReturn/UpsertITReturnDetailsExtension',
                                data: { itReturnDetailsExtensions: data },
                            })
                            .done(function (response) {
                                $(".message").html(response.Message);
                                if (response.IsSuccess) {
                                    $(".message").css("color", "white");
                                }
                                else {
                                    $(".message").css("color", "red");
                                }
                            })
                            .fail(function () { alert("error"); });
                        }
                    });

                    $(".btn-add-row").click(function (event) {
                        $("#hdNewSpIncomeRecordCount").val(parseInt($("#hdNewSpIncomeRecordCount").val()) - 1);
                        console.log($(this).parent().parent().find("tr.trSpIncomeDetails:last").html());
                        $(this).parent().parent().find("tr.trSpIncomeDetails:last")
                            .after(sptemplates.trSpIncomeRow.split('{0}')
                            .join($("#hdNewSpIncomeRecordCount").val()));
                        $('.form_datetime').datetimepicker({
                            weekStart: 1,
                            todayBtn: 1,
                            autoclose: 1,
                            todayHighlight: 1,
                            startView: 2,
                            minView: 2,
                            forceParse: 0
                        });
                        $(".numericOnly").keypress(function (e) {
                            return isANumber(e);
                        });
                        $(".numericOnly").change(function (e) {
                            if ($.isNumeric($(this).val())) {
                                $(this).val(parseFloat($(this).val()).toFixed(2));
                            }
                            else {
                                $(this).val("0.00");
                            }
                        });
                    });

                    $(".btn-add-row-refund-details").click(function (event) {
                        var $tr = $(this).parents('.modal-content').find('tr.trRefundDetails:last');
                        var $clone = $tr.clone();
                        $clone.find('.txtRefundDetailsValue').val('0.00');
                        $clone.find('.hdRefundDetailsId').val("0");
                        $tr.after($clone);                        
                        $('.form_datetime').datetimepicker({
                            weekStart: 1,
                            todayBtn: 1,
                            autoclose: 1,
                            todayHighlight: 1,
                            startView: 2,
                            minView: 2,
                            forceParse: 0
                        });
                        $(".numericOnly").keypress(function (e) {
                            return isANumber(e);
                        });
                        $(".numericOnly").change(function (e) {
                            if ($.isNumeric($(this).val())) {
                                $(this).val(parseFloat($(this).val()).toFixed(2));
                            }
                            else {
                                $(this).val("0.00");
                            }
                        });
                    });

                    $(".btn-save-it-refund-details").click(function (event) {
                        var data = [];
                        var isValid = true;
                        $(this).parents('.modal-content')
                            .find('tr.trRefundDetails').each(function () {
                                var refundDetail = {};
                                $('#ObjRefundDetails_ITReturnDetailsID').each(function () {
                                    refundDetail.ITReturnDetailsID = parseInt($(this).val());
                                });
                                $('#ObjRefundDetails_ITHeadMasterID').each(function () {
                                    refundDetail.ITHeadMasterID = parseInt($(this).val());
                                });
                                $(this).find('.hdRefundDetailsId').each(function () {
                                    refundDetail.Id = $(this).val();
                                });
                                $(this).find('.txtRefundDetailsValue').each(function () {
                                    if ($(this).val()) {
                                        refundDetail.RefAmount = $(this).val();
                                        $(this).removeClass("validationError");
                                    }
                                    else {
                                        isValid = false;
                                        $(this).addClass("validationError");
                                    }
                                });
                                $(this).find('.RefundDetailsDate').each(function () {
                                    if ($(this).val()) {
                                        refundDetail.RefDate = $(this).val();
                                        $(this).removeClass("validationError");
                                    }
                                    else {
                                        isValid = false;
                                        $(this).addClass("validationError");
                                    }
                                });
                                $(this).find('.ddFYAYRefundDetails').each(function () {
                                    if ($(this).val()) {
                                        refundDetail.FYAYID = $(this).val();
                                        $(this).removeClass("validationError");
                                    }
                                    else {
                                        isValid = false;
                                        $(this).addClass("validationError");
                                    }
                                });
                                data.push(refundDetail);
                            });
                        if (isValid) {

                            $.ajax({
                                type: 'POST',
                                url: '/TaxReturn/UpsertRefundDetails',
                                data: { refundDetailsList: data },
                            })
                                .done(function (response) {
                                    $(".message").html(response.Message);
                                    if (response.IsSuccess) {
                                        $(".message").css("color", "white");
                                    }
                                    else {
                                        $(".message").css("color", "red");
                                    }
                                })
                                .fail(function () { alert("error"); });
                        }
                    });

                    $('.expand').click(function () {
                        $(this).find('.expandCollapse').text($(this).find('.expandCollapse').text() == "+" ? "-" : "+");
                        $(this).nextAll().each(function () {
                            if ($(this).hasClass("collapse")) {
                                $(this).slideToggle(10);
                                return false; 
                            }
                            $(this).slideToggle(10);
                        });
                    });
                    $('.expand').each(function () {
                        $(this).nextUntil("tr.collapse").slideToggle(10);
                    });

                    $(".ddDocumentCategory").change(function () {
                        $(this).parents('.modal-content').find('.trDocument')
                            .each(function () {
                            $(this).show();
                        });
                        var subDocumentCatObject = $(this).closest('table').find('.ddSubDocumentCategory');
                        subDocumentCatObject.html('');
                        subDocumentCatObject.append('<option value="">Please Select</option>');
                        $.ajax({
                            url: '/getSubDocumentCategories?documentCategoryId='
                                + $(this).find("option:selected").val(),
                            error: function () {
                            },
                            dataType: 'json',
                            success: function (data) {
                                $(data).each(function () {
                                    var option = $('<option />');
                                    option.attr('value', this.Id).html(this.Description);
                                    subDocumentCatObject.append(option);
                                });
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                            },
                            type: 'GET'
                        });
                    });

                    $(".ddSubDocumentCategory").change(function () {
                        var ddSubDocumentCategoryObject = $(this);
                        $(this).parents('.modal-content').find('.trDocument').each(function () {
                            var hdSubCategoryId;
                            $(this).find('.hdSubCategoryId').each(function () {
                                hdSubCategoryId = $(this).val();
                            });
                            if (ddSubDocumentCategoryObject.val() === ""
                                || ddSubDocumentCategoryObject.val() === hdSubCategoryId) {
                                $(this).show();
                            }
                            else {
                                $(this).hide();
                            }
                        });
                    });
                }
            });
        }

        $(".btn-search").click(function () {
            loadITReturnDetailsData();
        });
    </script>
}
