@model LSWebApp.Models.ITReturnDetailsListItemModel
@using LSWebApp.Infrastructure;
<style>    
    .css-label {
        cursor: pointer;
    }
    .css-checkbox {
        display: none;
    }
    .fa {
        color: white;
        line-height: 16px;
        border-radius: 4px;
    }
    .fa-plus {
        padding-top: 2px;
        padding-right: 2px;
        padding-left: 2px;
        background-color: #3AC5C9;
    }
    .fa-minus {
        padding-top: 1px;
        padding-right: 2px;
        padding-left: 2px;
        background-color: #E85764;
        display: none;
    }
    .css-checkbox:checked + .css-label .fa-minus {
        display: inline;
    }
    .css-checkbox:checked + .css-label .fa-plus {
        display: none;
    }
</style>

<tr class="table-active">
    <td>
        @if (Model.CurrentItem.SubHeadList.Any())
        {
            <input id="toggle_@(Model.CurrentItem.Id.ToString())"
                   name="toggle_@(Model.CurrentItem.Id.ToString())"
                   type="checkbox"
                   class="css-checkbox collapsible"
                   title="@(Model.CurrentItem.PropertyName)" />
            <label for="toggle_@(Model.CurrentItem.Id.ToString())" class="css-label">
                <span class="fa fa-plus"></span>
                <span class="fa fa-minus"></span>
            </label>
        }
        @Model.CurrentItem.Description
    </td>
    @foreach (var itsectiondetail in Model.ITReturnDetailsListObject)
    {
        <td>
            @Utilities.FormatNumber(itsectiondetail.GetTotalComputedValue(Model.CurrentItem))        
        </td>
    }
</tr>
@if (Model.CurrentItem.PropertyName == "DeductChapterVIA")
{
    <tr class="table-info">
        <td>
            Total Income as per Regular Provisions
        </td>
        @foreach (var itsectiondetail in Model.ITReturnDetailsListObject)
        {
            <td>
                @Utilities.FormatNumber(
                    itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["IncomefromSalary"])
                    + itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["HousePropIncome"])
                    + itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["IncomefromCapGainsLTCG"])
                    + itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["IncomefromCapGainsSTCG"])
                    + itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["IncomefromBusinessProf"])
                    + itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["IncomefromSpeculativeBusiness"])
                    + itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["IncomeFromOtherSources"])
                    - itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["DeductChapterVIA"])
                )                
            </td>
        }
    </tr>
}

@if (Model.CurrentItem.PropertyName == "ProfitUS115JB")
{
    <tr class="table-info">
        <td>
            Book profit of the company
        </td>
        @foreach (var itsectiondetail in Model.ITReturnDetailsListObject)
                    {
            <td>
                @Utilities.FormatNumber(
                itsectiondetail.GetTotalComputedValue(Model.ITHeadMasterList["ProfitUS115JB"])
                )
            </td>
        }
    </tr>
}
@foreach (var subHead in @Model.CurrentItem.SubHeadList)
                {
    <tr class="@(subHead.IsAllowance.Value && subHead.IsAllowance.Value 
            ? "table-success" : "table-danger") @(Model.CurrentItem.PropertyName)" style="display:none;">
        <td>@subHead.Description</td>
        @foreach (var itsectiondetail in Model.ITReturnDetailsListObject)
                {
            <td>
                @Utilities.FormatNumber(itsectiondetail.Extensions
                .Where(e => e.ITSubHeadId == subHead.Id)
                .FirstOrDefault().ITSubHeadValue)
            </td>
        }
    </tr>
}

