@model LSWebApp.Models.ITReturnDocumentsModel
@{
    ViewBag.Title = "IT Return Documents";
    Layout = "~/Views/Shared/_LayoutDynemicMenu.cshtml";
}
<h2>IT Return Documents</h2>
<div>
    <table>
        <tr>
            <td>
                Financial Year:
            </td>
            <td>
                @Html.HiddenFor(m=>m.CompanyName, Model.CompanyName)
                @Html.HiddenFor(m => m.CompanyId, Model.CompanyId)
                @Html.HiddenFor(m => m.FinancialYear, Model.FinancialYear)
                @Html.DropDownListFor(m => m.FYAYId
                , new SelectList(Model.FYAYList, "Id", "FinancialYear", Model.FYAYId)
                , new { @name = "FYAYId", @id = "FYAYId", @class = "ddFYAYITRD", @style = "width:200px" })
            </td>
            <td>
                Section Category:
            </td>
            <td>
                @Html.DropDownListFor(m => m.ITSectionCategories
                , new SelectList(Model.ITSectionCategories, "Id", "Description", Model.FYAYId)
                , "All"
                , new
                {
                    @name = "ITSectionCategories",
                    @id = "ITSectionCategories",
                    @class = "ddITSectionCategories",
                    @style = "width:200px"
                })
            </td>
            <td>
                IT Section:
            </td>
            <td>
                @Html.DropDownListFor(m => m.ITSectionList
                , new SelectList(Model.ITSectionList, "Id", "Description", Model.FYAYId)
                , "All"
                , new
                {
                    @name = "ITSectionList",
                    @id = "ITSectionList",
                    @class = "ddITSectionList",
                    @style = "width:200px"
                })
            </td>
        </tr>
        
        <tr>
            <td>
                Document Category:
            </td>
            <td>
                @Html.DropDownListFor(m => m.DocumentCategoryId
                , new SelectList(Model.DocumentCategoryList, "Id", "Description", Model.DocumentCategoryId)
                , "All"
                , new { @name = "DocumentCategoryId", @id = "DocumentCategoryId"
                , @class = "ddDocumentCategory", @style = "width:200px" })
            </td>
            <td>
                Sub Category:
            </td>
            <td>
                @Html.DropDownListFor(m => m.SubDocumentCategoryId
                , new SelectList(Model.SubDocumentCategoryList, "Id", "Description", Model.SubDocumentCategoryId)
                , "All"
                , new
                {
                    @name = "SubDocumentCategoryId",
                    @id = "SubDocumentCategoryId",
                    @class = "ddSubDocumentCategory",
                    @style = "width:200px"
                })
                <img src="~/images/plus.png"
                     class="imgSubDocCategory"
                     style="width:20px;height:20px;"
                     title="Click to add sub head" />
            </td>   
            <td colspan="2" style="text-align:right;">
                <button type="button"
                        class="btn btn-primary btn-sm search" id="btnsrch">
                    Search
                </button>
            </td>   
        </tr>
        <tr>
            <td colspan="3"></td>
            <td>
                <input type="text"
                       style="width:150px;"
                       class="txtSubDocCategory" />
                <img src="~/images/save.png"
                     class="imgSubDocCategorySave"
                     style="width:20px;height:20px;" />
                <img src="~/images/close.png"
                     class="imgSubDocCategoryClose"
                     style="width:20px;height:20px;" />
            </td>
        </tr>
        <tr style="height:5px;"></tr>
    </table>
    <br />

    <div id="itrDocList">

    </div>
</div>
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () { 
            $(".search").click(function () {
                loadITReturnDetailDocuments();
            });

            $(".ddITSectionCategories").change(function () {
                $('.ddITSectionList').html('');
                var option = $('<option />');
                option.attr('value', "").html("All");
                $('.ddITSectionList').append(option);
                $.ajax({
                    url: '/getITSections?categoryId=' + $(this).find("option:selected").val(),
                    error: function () {
                    },
                    dataType: 'json',
                    success: function (data) {
                       
                        $(data).each(function () {
                            var option = $('<option />');
                            option.attr('value', this.Id).html(this.Description);
                            $('.ddITSectionList').append(option);
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    },
                    type: 'GET'
                });
            });

            $(".ddDocumentCategory").change(function () {
                var subDocumentCatObject = $(this).closest('table').find('.ddSubDocumentCategory');
                subDocumentCatObject.html('');
                subDocumentCatObject.append('<option>All</option>');
                $.ajax({
                    url: '/getSubDocumentCategories?documentCategoryId='
                    + $(this).find("option:selected").val(),
                    error: function () {
                    },
                    dataType: 'json',
                    success: function (data) {
                        $(data).each(function () {
                            var option = $('<option />');
                            option.attr('value', this.Id).html(this.Description);
                            subDocumentCatObject.append(option);
                        });
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    },
                    type: 'GET'
                });
            });     

            $(".imgSubDocCategory").click(function (e) {
                showHideSubDocCategoryControls($(this));
            });

            $(".imgSubDocCategoryClose").click(function (e) {
                showHideSubDocCategoryControls($(this));
            });

            $(".imgSubDocCategorySave").click(function (e) {
                var txtControl = null;
                var saveButton = $(this);
                var documentCategoryId = 0;
                $(e.target).closest(".custom-sub-doc-category").find('.txtSubDocCategory').each(function () {
                    txtControl = $(this);
                });
                $(e.target).closest(".custom-sub-doc-category").find('.ddDocumentCategory').each(function () {
                    documentCategoryId = $(this).val();
                });
                if (txtControl.val() == "") {
                    txtControl.addClass("validationError");
                    return;
                }
                else {
                    txtControl.removeClass("validationError");
                }

                var item = {};
                item.Description = txtControl.val();
                item.Active = true;
                item.DocumentCategoryId = documentCategoryId;

                $.ajax({
                    type: 'POST',
                    url: '/manageSubDocumentCategory/',
                    data: JSON.stringify(item),
                    success: function (data) {
                        saveButton.parents('.modal-content')
                            .find(".ddSubDocumentCategory")
                            .each(function () {
                                $(this).append($('<option></option>').val(data.Id).html(item.Description));
                            });
                        showHideSubDocCategoryControls(saveButton);
                    },
                    contentType: "application/json",
                    dataType: 'json'
                });
            });
        }); 

        function deleteITReturnDetailsDocument(itReturnDocumentId, filePath) {
            $.ajax({
                url: '/deletetITReturnDocument?Id=' + itReturnDocumentId + '&FilePath=' + filePath,
                error: function () {
                },
                dataType: 'json',
                success: function (data) {
                    window.location.reload();
                },
                type: 'POST'
            });
            return false;
        }

        function loadITReturnDetailDocuments() {
            $.ajax({
                url: '/itreturndetaildocuments?fyayId=' + $(".ddFYAYITRD").val()
                + '&itHeadId='
                + '&documentCategoryId=' + $(".ddDocumentCategory").val()
                + '&subDocumentCategoryId=' + $(".ddSubDocumentCategory").val()
                + '&itSectionId=' + $(".ddITSectionList").val()
                + '&itSectionCategoryId=' + $(".ddITSectionCategories").val(),
                error: function () {
                },
                dataType: 'html',
                success: function (data) {
                    $("#itrDocList").html(data);
                },
                type: 'GET'
            });
        }
    </script>
}